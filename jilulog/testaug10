import sys; print('Python %s on %s' % (sys.version, sys.platform))
/home/ma1/anaconda3/envs/VID-Trans-ReID/bin/python -u /snap/pycharm-professional/346/plugins/python/helpers/pydev/pydevd.py --cmd-line --multiprocess --qt-support=auto --client 127.0.0.1 --port 35103 --file /home/ma1/work/VID-Trans-ReID/VID_Test.py --Dataset_name Mars --model_path Transformer.pth
Connected to pydev debugger (build 232.8660.197)
/home/ma1/anaconda3/envs/VID-Trans-ReID/lib/python3.7/site-packages/torchvision/transforms/transforms.py:258: UserWarning: Argument interpolation should be of type InterpolationMode instead of int. Please, use InterpolationMode enum.
  "Argument interpolation should be of type InterpolationMode instead of int. "
=> MARS loaded
Dataset statistics:
  ------------------------------
  subset   | # ids | # tracklets
  ------------------------------
  train    |   625 |     8298
  query    |   626 |     1980
  gallery  |   622 |     9330
  ------------------------------
  total    |  1251 |    19608
  number of images per tracklet: 2 ~ 920, average 59.5
  ------------------------------
using stride: [16, 16], and patch number is num_y16 * num_x8
Resized position embedding from size:torch.Size([1, 197, 768]) to size: torch.Size([1, 129, 768]) with height:16 width: 8
/home/ma1/anaconda3/envs/VID-Trans-ReID/lib/python3.7/site-packages/torch/nn/functional.py:3455: UserWarning: Default upsampling behavior when mode=bilinear is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  "See the documentation of nn.Upsample for details.".format(mode)
Extracted features for query set, obtained 1980-by-13056 matrix
Extracted features for gallery set, obtained 9330-by-13056 matrix
Computing distance matrix
/home/ma1/work/VID-Trans-ReID/VID_Test.py:130: UserWarning: This overload of addmm_ is deprecated:
	addmm_(Number beta, Number alpha, Tensor mat1, Tensor mat2)
Consider using one of the following signatures instead:
	addmm_(Tensor mat1, Tensor mat2, *, Number beta, Number alpha) (Triggered internally at  /pytorch/torch/csrc/utils/python_arg_parser.cpp:1005.)
  distmat.addmm_(1, -2, qf, gf.t())
Original Computing CMC and mAP
Results ----------
mAP: 89.2%
CMC curve r1: 0.9591568
CMC: 0.9592, mAP : 0.8921
